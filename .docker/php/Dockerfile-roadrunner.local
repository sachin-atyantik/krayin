FROM php:8.3-fpm

# Set Caddy server name to "http://" to serve on 80 and not 443
ENV SERVER_NAME="http://"

RUN curl -sSL https://get.roadrunner.dev | bash

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    git \
    unzip \
    librabbitmq-dev \
    libpq-dev \
    libzip-dev \
    libpng-dev \
    libicu-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install \
    gd \
    pcntl \
    opcache \
    pdo \
    pdo_mysql \
    calendar \
    zip \
    intl

RUN docker-php-ext-install pcntl sockets

RUN apt-get update && apt-get install git -y

# Install Redis extension via PECL
RUN pecl install redis \
    && docker-php-ext-enable redis

# Copy Composer from the official Composer image
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

WORKDIR /var/www/html

# Copy the Laravel application files into the container.
COPY . .

# Set ownership of the application directory
RUN chown -R www-data:www-data /var/www/html && chmod -R 755 /var/www/html

# Install Laravel dependencies using Composer.
RUN composer install --no-dev --optimize-autoloader

# Copy additional configurations
COPY ./.docker/php/php.ini /usr/local/etc/php/

# Set permissions for Laravel directories
RUN chown -R www-data:www-data storage bootstrap/cache

# Expose ports
EXPOSE 8081

# Copy the start script
COPY ./.docker/start-container-rr.sh /usr/local/bin/start-container-rr.sh
RUN chmod +x /usr/local/bin/start-container-rr.sh

# Command to run the application
CMD ["/usr/local/bin/start-container-rr.sh"]
